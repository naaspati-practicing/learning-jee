import java.net.URI;
import java.net.URISyntaxException;
import java.util.Scanner;

import org.glassfish.grizzly.http.server.HttpServer;
import org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory;

import sam.jersey.app.App;
import sam.jersey.utils.ANSI;
import sam.jersey.utils.Utils;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Main {
	public static void main(String[] args) throws URISyntaxException {
		HttpServer server = null;
		try {
			server = GrizzlyHttpServerFactory.createHttpServer(new URI(App.BASE_URI), new App(), true);
			waitForExit(
					"unrestricted-resource", 
					"restricted-resource/denyAll",
					"restricted-resource/permitAll", 
					"restricted-resource/rolesAllowed",
					"restricted-resource/runtimeRolesAllowed?roles=manager,user"
					);
		} finally {
			if(server != null)
				server.shutdownNow();
		}
	}

	private static void waitForExit(String... suburls) {
		if(Utils.isEmpty(suburls))
			System.out.println(ANSI.yellow("application started at: ")+App.BASE_URI+"\n"+ANSI.red("type --exit to exit...."));
		else {
			StringBuilder sb = ANSI.cyan("Application started.\nTry out one of these URIs:", new StringBuilder()).append('\n');

			for (String s : suburls) {
				sb.append("  ");
				ANSI.yellow(App.BASE_URI, sb);
				ANSI.yellow(s, sb);
				sb.append('\n');
			}

			sb.append('\n');
			ANSI.red("type --exit to exit....", sb);
			
			System.out.println(sb);
			sb = null;
		}

		@SuppressWarnings("resource")
		Scanner sc = new Scanner(System.in);
		while(true) {
			if(sc.nextLine().trim().equalsIgnoreCase("--exit"))
				break;
		}
	}

	private Main() {}

}
